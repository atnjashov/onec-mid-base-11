
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Атняшов В. А.: Добавить реквизит формы КонтактноеЛицо
	Доработка_РаботаСФормами.ДополнитьФорму(ЭтотОбъект, Истина);
	//
	
	//Атняшов В. А.: Добавить реквизит формы СогласованнаяСкидка и кнопку ПересчётТабличнойЧасти
	Группа = Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"), Элементы.Найти("ГруппаШапкаЛево"));
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	
	ПолеВвода = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.Доработка_СогласованнаяСкидка";
	ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииСкидки");
	
	ПересчётТабличнойЧасти = "ПересчётТабличнойЧасти";
	
	Команда = Команды.Добавить(ПересчётТабличнойЧасти);
	Команда.Заголовок = "Пересчёт табличной части";
	Команда.Действие = ПересчётТабличнойЧасти;
	
	КнопкаФормы = Элементы.Добавить(ПересчётТабличнойЧасти, Тип("КнопкаФормы"), Группа);
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаФормы.ИмяКоманды = ПересчётТабличнойЧасти;
	//
	//Атняшов В. А.: Добавить реквизит Статус на форму
	Статус = Элементы.Добавить("Статус", Тип("ПолеФормы"));		
	Статус.ПутьКДанным = "Объект.Доработка_СтатусЗаказа";
	Статус.Вид = ВидПоляФормы.ПолеВвода;
	Статус.Заголовок = "Статус";
    //
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ПриИзмененииСкидки(Элемент)

	//Атняшов В. А.: Подтвердить пересчет	
	Если Ждать ВопросАсинх("Изменен процент скидки. Пересчитать таблицу товаров и услуг?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда 
		ПересчётТабличнойЧасти();
	КонецЕсли;
	//
	
КонецПроцедуры

&НаКлиенте
Функция РассчитатьСуммуСтрокиСДвумяСкидками(Строка, СогласованнаяСкидка);

	//Атняшов В. А.: Пересчет строки с двумя скидками
	Результат = Ложь;
	КоэффициентСкидки = 1 - (Строка.Скидка + СогласованнаяСкидка) * 0.01;
	Если КоэффициентСкидки < 0 Тогда
		Строка.Скидка = 100 - СогласованнаяСкидка;
		КоэффициентСкидки = 0;
		Результат = Истина;
	КонецЕсли;
	Строка.Сумма = Строка.Цена * Строка.Количество * КоэффициентСкидки;
	Возврат Результат;
	//
	
КонецФункции

&НаКлиенте
Функция Рассчитать(ТоварыУслуги, СогласованнаяСкидка, Результат)

	//Атняшов В. А.: и для товаров, и для услуг	
	Для Каждого Строка Из ТоварыУслуги Цикл
		Если РассчитатьСуммуСтрокиСДвумяСкидками(Строка, СогласованнаяСкидка) Тогда
			Если Результат = Неопределено Тогда
				Результат = Строка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ПересчётТабличнойЧасти()

	//Атняшов В. А.: Пересчет	
	СогласованнаяСкидка = Объект.Доработка_СогласованнаяСкидка;
	Результат = Рассчитать(Объект.Услуги, СогласованнаяСкидка, Рассчитать(Объект.Товары, СогласованнаяСкидка, Неопределено));
	Если Результат <> Неопределено Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Скидка превысила 100%% Строка %1", Результат.Номенклатура);
		Сообщение.Сообщить();			
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	//

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//Атняшов В. А.: Рассчитать cумму текущей cтроки	

	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;

	Если РассчитатьСуммуСтрокиСДвумяСкидками(ТекущиеДанные, Объект.Доработка_СогласованнаяСкидка) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Скидка превысила 100%% Строка %1", ТекущиеДанные.Номенклатура);
		Сообщение.Сообщить();			
	КонецЕсли;

	//
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
